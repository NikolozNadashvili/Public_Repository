USE [RiskDB]
GO

/****** Object:  StoredProcedure [dbo].[ClientStatus]    Script Date: 11/12/2024 6:04:19 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


ALTER   PROCEDURE [dbo].[sp_ClientStatus]
	@today DATE
AS
BEGIN

DECLARE @RunID INT;
DECLARE @StartTime DATETIME = GETDATE();

INSERT INTO RiskDB.system.TableUpdateLog (ProcedureName, TableName, StartTime, Status, LogDate)
VALUES ('ClientStatus', 'ClientStatus6m_simultaneous', @StartTime, 'In Progress', CAST(GETDATE() AS DATE));

SET @RunID = SCOPE_IDENTITY();

-- Declare Variables
--DECLARE @today DATE	;
--SET @today = DATEADD(DAY, -1, CAST(GETDATE() AS DATE)) ;

DELETE FROM riskdb.dbo.ClientStatus6m_simultaneous WHERE fn_today = @today ;

-- Distinct Dates
DROP TABLE IF EXISTS #dates ;

SELECT		DISTINCT ISNULL(cd.calculationdate, ins.calculation_date)  AS Hist_Date

INTO		#dates

FROM		DB.space.CloseDayLogs CD  WITH(NOLOCK)

FULL JOIN	DB.vendoo.installment_closedaylogs ins WITH(NOLOCK)
ON			ins.[calculation_date]= cd.[CalculationDate]  
;

--Creating #Apps
DROP TABLE IF EXISTS #Apps;

SELECT		ID_A,
			ID_D,
			s.in_form_pers_id,
			s.fn_today

INTO		#Apps				
FROM		RiskDB.dbo.ICL_Apps AS s WITH(NOLOCK)

WHERE		fn_today = @today
;

INSERT INTO	#Apps

SELECT		ID_A,
			ID_D,
			sv.in_form_pers_id AS in_form_pers_id,
			sv.fn_today

FROM		RiskDB.dbo.POS_Apps sv WITH(NOLOCK)

WHERE		sv.fn_today = @today


-- Creating #Snapshots 

DROP TABLE IF EXISTS #Snapshots ;

SELECT			CAST(ls.AccountId AS VARCHAR(50)) AS AccountID, 
				ls.CustomerPersonalNumber, 
				MIN(ls.ActivationDate) [Start_Date], 
				ISNULL(MAX(ls.ClosedDate), @today) AS [End_date]

INTO			#Snapshots

FROM			db.calc.LoanSnapshotsMerged AS ls (NOLOCK)

WHERE			ls.ActivationDate IS NOT NULL
				AND EXISTS (SELECT 1 FROM #Apps AS p WHERE p.in_form_pers_id = ls.CustomerPersonalNumber)
GROUP BY		ls.AccountId, ls.CustomerPersonalNumber
;

INSERT	INTO	#Snapshots

SELECT			ins.appl_id AS appl_id,
				sv.in_form_pers_id,
				MIN(ins.disbursement_date) [Start_Date],
				ISNULL(MAX(cd.calculation_date), @today) [End_Date]

FROM			db.vendoo.installment_snapshots ins (NOLOCK)

LEFT JOIN		DB.vendoo.installment_closedaylogs CD (NOLOCK) 
ON				CD.[Close_Day_Log_Id]= ins.[close_day_log_id]  AND CD.finish_timestamp IS NOT NULL

LEFT JOIN		#Apps AS sv ON sv.ID_D = ins.appl_id 

WHERE			ins.disbursement_date IS NOT NULL AND ISNULL(ins.delete_mark,0) = 0
				AND EXISTS (SELECT 1 FROM #Apps AS p WHERE p.in_form_pers_id = sv.in_form_pers_id)

GROUP BY		ins.appl_id,
				sv.in_form_pers_id
;

-- Create a base table
DROP TABLE IF EXISTS #base;

SELECT			*

INTO			#base

FROM
(SELECT			d.HIST_DATE AS Date,
				t.CustomerPersonalNumber AS in_form_pers_id,
				1 AS Count

FROM			#dates AS d

LEFT JOIN		#Snapshots AS t
ON				1 = 1

WHERE			EXISTS (SELECT 1 FROM #Snapshots AS s WHERE s.Start_Date <= d.Hist_Date AND d.Hist_Date <= s.End_date AND s.CustomerPersonalNumber = t.CustomerPersonalNumber)

GROUP BY		d.hist_date,
				t.CustomerPersonalNumber) AS a


DROP TABLE IF EXISTS #tmp ;

SELECT			a.fn_today,
				a.ID_A,
				a.in_form_pers_id,
				ISNULL((SELECT SUM(b.Count) FROM #base AS b WHERE b.in_form_pers_id = a.in_form_pers_id AND b.Date < a.fn_today), 0) AS Days

INTO			#tmp

FROM			#Apps AS a

GROUP BY		a.fn_today,
				a.ID_A,
				a.in_form_pers_id
;
INSERT INTO riskdb.dbo.ClientStatus6m_simultaneous SELECT * FROM #tmp WHERE ID_A IS NOT NULL
;


DECLARE @EndTime DATETIME = GETDATE();
DECLARE @DurationSeconds INT = DATEDIFF(SECOND, @StartTime, @EndTime);
DECLARE @DurationFormatted VARCHAR(8) = CONVERT(VARCHAR(8), DATEADD(SECOND, @DurationSeconds, 0), 108);

UPDATE RiskDB.system.TableUpdateLog
SET EndTime = @EndTime,
	Duration = @DurationSeconds,
	DurationFormatted = @DurationFormatted,
	Status = 'Updated'
WHERE RunID = @RunID;

END
GO


